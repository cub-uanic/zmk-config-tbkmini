/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define _BASE       0
#define _UNCONV     1
#define _FKEYS      2
#define _NUMPAD     3
#define _ARROW      4
#define _MOUSE      5
#define _MACRO      6
#define _UPPER      7
#define _GAME       8

#define NXT_LYR         &trans
#define _TRANS_         &trans
#define _______         &trans
#define ___x___         &none
#define ___X___         &none

#define mtla            mt LALT
#define mtra            mt RALT
#define mtlc            mt LCTRL
#define mtrc            mt RCTRL
#define mtls            mt LSHFT
#define mtrs            mt RSHFT
#define mtlg            mt LGUI
#define mtrg            mt RGUI


&lt {
        tapping-term-ms = <250>;
};

&mt {
        tapping-term-ms = <250>;
};

/ {
        macros {
                m_dbl_shft: m_dbl_shft {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&macro_press   &kp LSHFT>
                                , <&macro_release &kp LSHFT>
                                , <&macro_press   &kp LSHFT>
                                , <&macro_release &kp LSHFT>
                                ;
                };
                m_passwd_1: m_passwd_1 {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&kp C>
                                , <&kp U>
                                , <&kp B>
                                , <&kp I>
                                , <&kp C>
                                , <&kp R>
                                , <&kp U>
                                , <&kp B>
                                , <&kp I>
                                , <&kp C>
                                , <&kp ENTER>
                                ;
                };
                m_passwd_2: m_passwd_2 {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&kp C>
                                , <&kp U>
                                , <&kp B>
                                , <&kp UNDERSCORE>
                                , <&kp N7>
                                , <&kp N1>
                                , <&kp N3>
                                , <&kp ENTER>
                                ;
                };
                m_passwd_3: m_passwd_3 {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&kp V>
                                , <&kp I>
                                , <&kp T>
                                , <&kp SEMICOLON>
                                , <&kp V>
                                , <&kp E>
                                , <&kp I>
                                , <&kp T>
                                , <&kp SEMICOLON>
                                , <&kp V>
                                , <&kp ENTER>
                                ;
                };
                m_passwd_4: m_passwd_4 {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <40>;
                        tap-ms = <40>;
                        bindings
                                = <&kp V>
                                , <&kp I>
                                , <&kp T>
                                , <&kp LS(APOS)>
                                , <&kp LS(N7)>
                                , <&kp LS(N1)>
                                , <&kp LS(N3)>
                                , <&kp ENTER>
                                ;
                };
                m_mac_lock: m_mac_lock {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        wait-ms = <1000>;
                        tap-ms = <1000>;
                        bindings
                                = <&kp LC(LG(Q))>
                                , <&kp ESC>
                                , <&kp ESC>
                                , <&kp ESC>
                                ;
                };
        };

        keymap {
                compatible = "zmk,keymap";

// the layers defined below are supposed to be used with WCE layout on Mac
// on hardware level, it's QWERTY - but with WCE, it's customized Workman for Programmers
// primarly, it's optimized for use with Java and IntelliJ IDEA, and Perl
// also, layers are trivially convertible for 3*6 keyboards like Corne or TBK Mini

// Layer 0 : default layer
// -------------------------------------------------------------------------------------------
/*
            DSFT Q    D    R    W    B                      J    F    U    P    ;:   '"
            TAB  A    S    H    T    G                      Y    N    E    O    I    -_
            GRV  Z    X    M    C    V                      K    L    ,<   .>   /?   \|
*/
                default_layer {
                        bindings = <
   &m_dbl_shft    &kp Q          &kp W          &kp E          &kp R          &lt _MACRO T              &lt _MACRO Y   &kp U          &kp I          &kp O          &kp P          &kp LBKT
   &mtla TAB      &lt _UNCONV A  &lt _FKEYS S   &lt _MOUSE  D  &lt _NUMPAD F  &lt _ARROW G              &kp H          &kp J          &kp K          &kp L          &kp SEMI       &mtra APOS
   &mtls GRAVE    &kp Z          &kp X          &kp C          &lt _UPPER V   &kp B                     &kp N          &lt _UPPER M   &kp COMMA      &kp DOT        &kp FSLH       &mtrs RBKT
                                                &mtlc BSPC     &mtls DEL      &mtlg ESC                 &mtrg INS      &mtrs RET      &mtrc SPC
                        >;
                };


// Layer1/_UNCONV: unconvenient keys
// -------------------------------------------------------------------------------------------
/*
            NO  ,NO  ,NO  ,NO  ,NO  ,NO  ,                  |    ^    *    (    )    %
            NO  ,NO  ,NO  ,NO  ,NO  ,NO  ,                  &    -    >    {    }    @
            NO  ,TRNS,NO  ,NO  ,NO  ,NO  ,                  '    !    $    "    :    ;
            NO  ,NO  ,NO  ,NO  ,NO  ,NO  ,                  #    [    <    >    ]    \ 
*/
                unconv_layer {
                        bindings = <
   ___x___        ___x___        ___x___        ___x___        ___x___        ___x___                   &kp BSLH       &kp APOS       &kp LS(DOT)    &kp N4         &kp N5         &kp N2
   _TRANS_        NXT_LYR        ___x___        ___x___        ___x___        ___x___                   &kp LBKT       &kp N1         &kp LS(MINUS)  &kp LS(LBKT)   &kp LS(P)      &kp P
   _TRANS_        ___x___        ___x___        ___x___        ___x___        ___x___                   &kp N3         &kp N6         &kp LS(COMMA)  &kp LS(DOT)    &kp N7         &kp RBKT
                                                _TRANS_        _TRANS_        _TRANS_                   _TRANS_        _TRANS_        _TRANS_
                        >;
                };


// Layer2/_FKEYS: F-keys + PgUp/PgDn + App
// -------------------------------------------------------------------------------------------
                fkeys_layer {
                        bindings = <
   ___x___        ___x___        ___x___        ___x___        ___x___        ___x___                   ___x___        &kp F1         &kp F2         &kp F3         &kp F4         &kp PG_UP
   _TRANS_        ___x___        NXT_LYR        ___x___        ___x___        ___x___                   ___x___        &kp F5         &kp F6         &kp F7         &kp F8         &kp PG_DN
   _TRANS_        ___x___        ___x___        ___x___        ___x___        ___x___                   ___x___        &kp F9         &kp F10        &kp F11        &kp F12        &kp K_APP
                                                _TRANS_        _TRANS_        _TRANS_                   _TRANS_        _TRANS_        _TRANS_
                        >;
                };


// Layer3/_NUMPAD: numpad
// -------------------------------------------------------------------------------------------
                numpad_layer {
                        bindings = <
   ___x___        ___x___        ___x___        ___x___        ___x___        ___x___                   &kp KP_NLCK    &kp KP_N7      &kp KP_N8       &kp KP_N9       &kp KP_MINUS   &kp KP_MULTIPLY
   _TRANS_        ___x___        ___x___        NXT_LYR        ___x___        ___x___                   &kp LS(P)      &kp KP_N4      &kp KP_N5       &kp KP_N6       &kp KP_PLUS    &kp KP_DIVIDE
   _TRANS_        ___x___        ___x___        ___x___        ___x___        ___x___                   &kp KP_N0      &kp KP_N1      &kp KP_N2       &kp KP_N3       &kp KP_ENTER   &kp K_APP
                                                _TRANS_        _TRANS_        _TRANS_                   _TRANS_        _TRANS_        _TRANS_
                        >;
                };


// Layer4/_UNCONV: unconvenient keys + arrows block
// -------------------------------------------------------------------------------------------
                arrow_layer {
                        bindings = <
   ___x___        ___x___        ___x___        ___x___        ___x___        ___x___                   &kp LS(RBKT)   &kp MINUS      &kp N8         &kp N9         &kp N0         &kp LS(BSLH)
   _TRANS_        ___x___        ___x___        ___x___        NXT_LYR        ___x___                   &kp LC(LEFT)   &kp LEFT       &kp UP         &kp DOWN       &kp RIGHT      &kp LC(RIGHT)
   _TRANS_        ___x___        ___x___        ___x___        ___x___        ___x___                   ___x___        &kp LS(LEFT)   &kp PG_UP      &kp PG_DN      &kp LS(RIGHT)  _TRANS_
                                                _TRANS_        _TRANS_        _TRANS_                   _TRANS_        _TRANS_        _TRANS_
                        >;
                };

// Layer5/_MOUSE: mouse and navigation
// -------------------------------------------------------------------------------------------
                mouse_layer {
                        bindings = <
   ___x___        ___x___        ___x___        ___x___        ___x___        ___x___                   &mkp MB2       &msc SCRL_LEFT &msc SCRL_UP   &msc SCRL_DOWN &msc SCRL_RIGHT &kp PG_UP
   _TRANS_        ___x___        ___x___        ___x___        ___x___        NXT_LYR                   &mkp MB1       &mmv MOVE_LEFT &mmv MOVE_UP   &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp PG_DN
   _TRANS_        ___x___        ___x___        ___x___        ___x___        ___x___                   &mkp MB3       &kp HOME       &kp END        &kp DELETE     &kp INSERT      &kp K_APP
                                                _TRANS_        _TRANS_        _TRANS_                   _TRANS_        _TRANS_        _TRANS_
                        >;
                };


// Layer6/_MACRO: Macros, media and full F-keys
// -------------------------------------------------------------------------------------------
                macro_layer {
                        bindings = <
   &m_passwd_1    ___x___        ___x___        ___x___        &sys_reset     NXT_LYR                   NXT_LYR        &kp C_MUTE     &kp C_VOL_DN   &kp C_VOL_UP   ___x___        &m_passwd_3
   &m_passwd_2    &out OUT_BLE   &out OUT_USB   &out OUT_TOG   ___x___        &sys_reset                &sys_reset     &kp C_PREV     &kp C_PP       &kp C_NEXT     ___x___        &m_passwd_4
   &bt BT_CLR     &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4              &bt BT_CLR     &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
                                                &bootloader    _TRANS_        &m_mac_lock               &m_mac_lock    _TRANS_        &bootloader
                        >;
                };


// Layer7/_UPPER: upper-row, which is missing on 3x6 layout
// -------------------------------------------------------------------------------------------
                upper_layer {
                        bindings = <
   &kp ESC        &kp N1         &kp N2         &kp N3         &kp N4         &kp N5                    &kp N6         &kp N7         &kp N8         &kp N9         &kp N0         &kp EQUAL
   _TRANS_        ___x___        ___x___        ___x___        ___x___        ___x___                   ___x___        ___x___        ___x___        ___x___        ___x___        _TRANS_
   _TRANS_        &kp CAPS       &kp SLCK       &kp KP_NLCK    NXT_LYR        &kp CAPS                  &kp CAPS       NXT_LYR        ___x___        ___x___        ___x___        _TRANS_
                                                _TRANS_        _TRANS_        _TRANS_                   _TRANS_        _TRANS_        _TRANS_
                        >;
                };


// -------------------------------------------------------------------------------------------
                template_layer {
                        bindings = <
   ___x___        ___x___        ___x___        ___x___        ___x___        ___x___                   ___x___        ___x___        ___x___        ___x___        ___x___        ___x___
   _TRANS_        ___x___        ___x___        ___x___        ___x___        ___x___                   ___x___        ___x___        ___x___        ___x___        ___x___        _TRANS_
   _TRANS_        ___x___        ___x___        ___x___        ___x___        ___x___                   ___x___        ___x___        ___x___        ___x___        ___x___        _TRANS_
                                                _TRANS_        _TRANS_        _TRANS_                   _TRANS_        _TRANS_        _TRANS_
                        >;
                };

        };
};

